{"version":3,"file":"strategy-easy.js","sourceRoot":"","sources":["strategy-easy.ts"],"names":[],"mappings":";AAAA,+BAAiC,kBAAkB,CAAC,CAAA;AAEpD,sBAA6B,IAAY,EAAE,WAAkB;IAC3D,IAAI,UAAU,GAAY,EAAE,EAAE,IAAI,GAA0B,EAAE,CAAC;IAC/D,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC;QACxC,IAAI,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;QAClB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC;YACvC,IAAI,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC;YAChD,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,KAAK,sBAAK,CAAC,IAAI,IAAI,IAAI,CAAC,EAAE,CAAC,KAAK,SAAS,CAAC,CAAC,CAAC;gBACxD,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACtB,IAAI,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC;YAClB,CAAC;QACH,CAAC;QACD,EAAE,CAAC,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YAC1B,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,WAAW,CAAC;YAC9E,MAAM,CAAC;QACT,CAAC;IACH,CAAC;AACH,CAAC;AAhBe,oBAAY,eAgB3B,CAAA","sourcesContent":["import {ICell, IRow, State} from './matrix.service';\r\n\r\nexport function easyStrategy(rows: IRow[], targetState: State): void {\r\n  let candidates: ICell[] = [], xRef: {[id: number]: ICell} = {};\r\n  for (let x = 0; x < rows.length; x += 1) {\r\n    let row = rows[x];\r\n    for (let y = 0; y < row.length; y += 1) {\r\n      let cell = row[y], id = cell.row * 3 + cell.col;\r\n      if (cell.state === State.None && xRef[id] === undefined) {\r\n        candidates.push(cell);\r\n        xRef[id] = cell;\r\n      }\r\n    }\r\n    if (candidates.length > 0) {\r\n      candidates[Math.floor(Math.random() * candidates.length)].state = targetState;\r\n      return;\r\n    }\r\n  }\r\n}"]}