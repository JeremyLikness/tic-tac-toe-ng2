{"version":3,"file":"cell.component.spec.js","sourceRoot":"","sources":["cell.component.spec.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,wBAOO,uBAAuB,CAAC,CAAA;AAC/B,wBAAqD,2BAA2B,CAAC,CAAA;AACjF,qBAAwB,eAAe,CAAC,CAAA;AACxC,iCAAiB,2BAA2B,CAAC,CAAA;AAC7C,+BAA4B,kBAAkB,CAAC,CAAA;AAC/C,+BAA4B,mBAAmB,CAAC,CAAA;AAChD,iCAA6B,qBAAqB,CAAC,CAAA;AAEnD,kBAAQ,CAAC,iBAAiB,EAAE;IAC1B,IAAI,OAA6B,CAAC;IAElC,6BAAmB,CAAC,cAAM,OAAA,CAAC,8BAAa,EAAE,8BAAa,EAAE,iCAAc,CAAC,EAA9C,CAA8C,CAAC,CAAC;IAC1E,oBAAU,CACN,gBAAM,CAAC,CAAC,8BAAoB,CAAC,EAAE,UAAS,GAAyB,IAAI,OAAO,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAE5F,YAAE,CAAC,6BAA6B,EAC7B,gBAAM,CAAC,CAAC,8BAAa,CAAC,EAAE,UAAC,SAAwB,IAAO,gBAAM,CAAC,SAAS,CAAC,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAE/F,YAAE,CAAC,6BAA6B,EAAE,gBAAM,CAAC,EAAE,EAAE;QACxC,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,2BAA2B,CAAC;aAClD,IAAI,CAAC,UAAC,OAA8B;YACnC,IAAI,KAAK,GAAG,OAAO,CAAC,YAAY,CAAC,KAAK,CAAC,qBAAE,CAAC,SAAS,CAAC,8BAAa,CAAC,CAAC,CAAC;YACpE,gBAAM,CAAC,KAAK,CAAC,CAAC,UAAU,EAAE,CAAC;YAC3B,gBAAM,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC,UAAU,EAAE,CAAC;QAC/C,CAAC,CAAC,CAAC;IACT,CAAC,CAAC,CAAC,CAAC;IAEP,YAAE,CAAC,+BAA+B,EAAE,gBAAM,CAAC,EAAE,EAAE;QAC1C,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,2BAA2B,CAAC;aAClD,IAAI,CAAC,UAAC,OAA8B;YACnC,OAAO,CAAC,aAAa,EAAE,CAAC;YACxB,IAAI,KAAK,GAAG,OAAO,CAAC,YAAY,CAAC,KAAK,CAAC,qBAAE,CAAC,SAAS,CAAC,8BAAa,CAAC,CAAC,CAAC;YACpE,gBAAM,CAAC,KAAK,CAAC,CAAC,UAAU,EAAE,CAAC;YAC3B,gBAAM,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC,UAAU,EAAE,CAAC;YAC7C,gBAAM,CAAC,KAAK,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAC5C,gBAAM,CAAC,KAAK,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC9C,CAAC,CAAC,CAAC;IACT,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC;AASH;IAAA;QACS,QAAG,GAAW,CAAC,CAAC;QAChB,QAAG,GAAW,CAAC,CAAC;IACzB,CAAC;IAVD;QAAC,gBAAS,CAAC;YACT,QAAQ,EAAE,MAAM;YAChB,QAAQ,EAAE,qDAET;YACD,UAAU,EAAE,CAAC,8BAAa,CAAC;SAC5B,CAAC;;mCAAA;IAIF,kCAAC;AAAD,CAAC,AAHD,IAGC","sourcesContent":["import {\r\n  beforeEach,\r\n  beforeEachProviders,\r\n  describe,\r\n  expect,\r\n  it,\r\n  inject,\r\n} from '@angular/core/testing';\r\nimport {ComponentFixture, TestComponentBuilder} from '@angular/compiler/testing';\r\nimport {Component} from '@angular/core';\r\nimport {By} from '@angular/platform-browser';\r\nimport {CellComponent} from './cell.component';\r\nimport {QuotesService} from '../quotes.service';\r\nimport {BadTurnService} from '../bad-turn.service';\r\n\r\ndescribe('Component: Cell', () => {\r\n  let builder: TestComponentBuilder;\r\n\r\n  beforeEachProviders(() => [CellComponent, QuotesService, BadTurnService]);\r\n  beforeEach(\r\n      inject([TestComponentBuilder], function(tcb: TestComponentBuilder) { builder = tcb; }));\r\n\r\n  it('should inject the component',\r\n     inject([CellComponent], (component: CellComponent) => { expect(component).toBeTruthy(); }));\r\n\r\n  it('should create the component', inject([], () => {\r\n       return builder.createAsync(CellComponentTestController)\r\n           .then((fixture: ComponentFixture<any>) => {\r\n             let query = fixture.debugElement.query(By.directive(CellComponent));\r\n             expect(query).toBeTruthy();\r\n             expect(query.componentInstance).toBeTruthy();\r\n           });\r\n     }));\r\n\r\n  it('should set the row and column', inject([], () => {\r\n       return builder.createAsync(CellComponentTestController)\r\n           .then((fixture: ComponentFixture<any>) => {\r\n             fixture.detectChanges();\r\n             let query = fixture.debugElement.query(By.directive(CellComponent));\r\n             expect(query).toBeTruthy();\r\n             expect(query.componentInstance).toBeTruthy();\r\n             expect(query.componentInstance.col).toBe(1);\r\n             expect(query.componentInstance.row).toBe(2);\r\n           });\r\n     }));\r\n});\r\n\r\n@Component({\r\n  selector: 'test',\r\n  template: `\r\n    <cell [row]=\"row\" [col]=\"col\"></cell>\r\n  `,\r\n  directives: [CellComponent]\r\n})\r\nclass CellComponentTestController {\r\n  public col: number = 1;\r\n  public row: number = 2;\r\n}\r\n"]}