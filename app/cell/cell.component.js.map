{"version":3,"file":"cell.component.js","sourceRoot":"","sources":["cell.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAwE,eAAe,CAAC,CAAA;AACxF,iCAA6B,qBAAqB,CAAC,CAAA;AACnD,+BAA4B,mBAAmB,CAAC,CAAA;AAChD,+BAAoB,mBAAmB,CAAC,CAAA;AASxC;IAwCE,uBAAmB,YAA2B,EAAS,OAAuB;QAA3D,iBAAY,GAAZ,YAAY,CAAe;QAAS,YAAO,GAAP,OAAO,CAAgB;QAxB7D,yBAAoB,GAA0B,IAAI,mBAAY,EAAW,CAAC;QAEnF,cAAS,GAAW,WAAW,CAAC;QAEjC,UAAK,GAAW,CAAC,CAAC;QAqBvB,IAAI,CAAC,EAAE,GAAG,aAAa,CAAC,QAAQ,CAAC;QACjC,aAAa,CAAC,QAAQ,IAAI,CAAC,CAAC;IAC9B,CAAC;IArBD,gCAAQ,GAAR,cAAa,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;IAE7D,mCAAW,GAAX;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC;YACxB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;QAChD,CAAC;IACH,CAAC;IAED,sBAAW,mCAAQ;aAAnB;YACE,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,IAAI,sBAAK,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC9B,MAAM,CAAC,GAAG,CAAC;YACb,CAAC;YACD,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,IAAI,sBAAK,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC9B,MAAM,CAAC,GAAG,CAAC;YACb,CAAC;YACD,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;QACxB,CAAC;;;OAAA;IAOM,2BAAG,GAAV;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,KAAK,sBAAK,CAAC,IAAI,CAAC,CAAC,CAAC;YAClC,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;gBACnB,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACvC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC;YAC7C,CAAC;QACH,CAAC;IACH,CAAC;IAnDc,sBAAQ,GAAW,CAAC,CAAC;IAIpC;QAAC,YAAK,EAAE;;8CAAA;IAER;QAAC,YAAK,EAAE;;8CAAA;IAER;QAAC,YAAK,EAAE;;oDAAA;IAER;QAAC,YAAK,EAAE;;oDAAA;IAER;QAAC,YAAK,EAAE;;sDAAA;IAER;QAAC,aAAM,EAAE;;+DAAA;IAvBX;QAAC,gBAAS,CAAC;YACT,QAAQ,EAAE,MAAM,CAAC,EAAE;YACnB,QAAQ,EAAE,MAAM;YAChB,WAAW,EAAE,qBAAqB;YAClC,SAAS,EAAE,CAAC,oBAAoB,CAAC;YACjC,SAAS,EAAE,CAAC,iCAAc,EAAE,8BAAa,CAAC;SAC3C,CAAC;;qBAAA;IAuDF,oBAAC;AAAD,CAAC,AAtDD,IAsDC;AAtDY,qBAAa,gBAsDzB,CAAA","sourcesContent":["import {Component, Input, Output, OnInit, OnChanges, EventEmitter} from '@angular/core';\r\nimport {BadTurnService} from '../bad-turn.service';\r\nimport {QuotesService} from '../quotes.service';\r\nimport {State} from '../matrix.service';\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'cell',\r\n  templateUrl: 'cell.component.html',\r\n  styleUrls: ['cell.component.css'],\r\n  providers: [BadTurnService, QuotesService]\r\n})\r\nexport class CellComponent implements OnInit,\r\n    OnChanges {\r\n  private static _counter: number = 1;\r\n\r\n  public id: number;\r\n\r\n  @Input() public row: number;\r\n\r\n  @Input() public col: number;\r\n\r\n  @Input() public cellState: State;\r\n\r\n  @Input() public validTurn: boolean;\r\n\r\n  @Input() public winningCell: boolean;\r\n\r\n  @Output() public stateChangeRequested: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n\r\n  private cellQuote: string = \"Zzzzz....\";\r\n\r\n  public score: number = 0;\r\n\r\n  ngOnInit() { this.cellQuote = this.quoteService.getQuote(); }\r\n\r\n  ngOnChanges() {\r\n    if (Math.random() < 0.5) {\r\n      this.cellQuote = this.quoteService.getQuote();\r\n    }\r\n  }\r\n\r\n  public get cellText(): string {\r\n    if (this.cellState == State.O) {\r\n      return \"O\";\r\n    }\r\n    if (this.cellState == State.X) {\r\n      return \"X\";\r\n    }\r\n    return this.cellQuote;\r\n  }\r\n\r\n  constructor(public quoteService: QuotesService, public badTurn: BadTurnService) {\r\n    this.id = CellComponent._counter;\r\n    CellComponent._counter += 1;\r\n  }\r\n\r\n  public set(): void {\r\n    if (this.cellState === State.None) {\r\n      if (this.validTurn) {\r\n        this.stateChangeRequested.emit(true);\r\n      } else {\r\n        this.cellQuote = this.badTurn.getBadTurn();\r\n      }\r\n    }\r\n  }\r\n}\r\n"]}