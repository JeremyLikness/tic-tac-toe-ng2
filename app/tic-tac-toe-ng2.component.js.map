{"version":3,"file":"tic-tac-toe-ng2.component.js","sourceRoot":"","sources":["tic-tac-toe-ng2.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {Component, OnInit} from '@angular/core';\r\nimport {CellComponent} from './cell/cell.component';\r\nimport {MatrixService, IRow, ICell, State, GameState} from './matrix.service';\r\nimport {StrategyService} from './strategy.service';\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'tic-tac-toe-ng2-app',\r\n  templateUrl: 'tic-tac-toe-ng2.component.html',\r\n  styleUrls: ['tic-tac-toe-ng2.component.css'],\r\n  directives: [CellComponent],\r\n  providers: [MatrixService, StrategyService]\r\n})\r\nexport class TicTacToeNg2AppComponent implements OnInit {\r\n  title = 'Welcome to Angular 2 Tic-Tac-Toe!';\r\n  public rows: IRow[] = [];\r\n  public youAreX: boolean;\r\n  public yourTurn: boolean;\r\n  public won: boolean;\r\n  public computerWon: boolean;\r\n  public draw: boolean;\r\n  public slowComputer: boolean = true;\r\n  private execComputerMove: () => void;\r\n\r\n  public get easyMode(): boolean { return this.strategy && this.strategy.easyMode; }\r\n\r\n  public set easyMode(easy: boolean) { this.strategy.easyMode = easy; }\r\n\r\n  constructor(private matrix: MatrixService, private strategy: StrategyService) {\r\n    this.rows = matrix.rows;\r\n    this.youAreX = matrix.computerTurn === GameState.OTurn;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.slowComputer) {\r\n      this.execComputerMove = () =>\r\n          setTimeout(() => this.computerMove(), Math.random() * 5000 + 500);\r\n    } else {\r\n      this.execComputerMove = () => this.computerMove();\r\n    }\r\n    this.updateStats();\r\n  }\r\n\r\n  private updateStats(): void {\r\n    this.yourTurn = this.matrix.gameState !== GameState.Won &&\r\n                    this.matrix.gameState !== GameState.Draw &&\r\n                    this.matrix.gameState !== this.matrix.computerTurn;\r\n    this.won = this.matrix.gameState === GameState.Won;\r\n    this.computerWon = this.matrix.computerWon;\r\n    this.draw = this.matrix.gameState === GameState.Draw;\r\n    if (!this.yourTurn) {\r\n      this.execComputerMove();\r\n    }\r\n  }\r\n\r\n  public stateChange(cell: ICell) {\r\n    cell.state = this.matrix.gameState === GameState.XTurn ? State.X : State.O;\r\n    this.matrix.advanceBoardState();\r\n    this.updateStats();\r\n  }\r\n\r\n  private computerMove(): void {\r\n    if (this.yourTurn || this.won || this.draw) {\r\n      return;\r\n    }\r\n    this.strategy.executeStrategy(this.matrix.winLines,\r\n                                  this.matrix.computerTurn === GameState.XTurn ? State.X : State.O);\r\n    this.matrix.advanceBoardState();\r\n    this.updateStats();\r\n  }\r\n\r\n  public reset() {\r\n    this.matrix.reset();\r\n    this.youAreX = this.matrix.computerTurn === GameState.OTurn;\r\n    this.updateStats();\r\n  }\r\n}\r\n"]}